name: Deploy To AWS
on:
 push:
   branches:
     main

permissions:
  id-token: write

env:
  AWS_REGION: "us-east-1"
  ECR_API_REPOSITORY: ${{ secrets.ECR_API_REPOSITORY }}

jobs:
  build-api-image:
    name: Build API Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          role-to-assume: ${{ secrets.AWS_ACTIONS_ROLE_ARN }}
          role-session-name: github-actions-session
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push API image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_API_REPOSITORY ./api
          docker tag $ECR_REGISTRY/$ECR_API_REPOSITORY $ECR_REGISTRY/$ECR_API_REPOSITORY:${{ github.sha }}
          docker tag $ECR_REGISTRY/$ECR_API_REPOSITORY $ECR_REGISTRY/$ECR_API_REPOSITORY:latest
          docker push --all-tags $ECR_REGISTRY/$ECR_API_REPOSITORY
  build-web-image:
    name: Build Web Docker Image
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          role-to-assume: ${{ secrets.AWS_ACTIONS_ROLE_ARN }}
          role-session-name: github-actions-session
          aws-region: ${{ env.AWS_REGION }}
 
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
 
      - name: Build, tag, and push Web image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/bluthinator-web ./web
          docker tag $ECR_REGISTRY/bluthinator-web $ECR_REGISTRY/bluthinator-web:${{ github.sha }}
          docker tag $ECR_REGISTRY/bluthinator-web $ECR_REGISTRY/bluthinator-web:latest
          docker push --all-tags $ECR_REGISTRY/bluthinator-web
